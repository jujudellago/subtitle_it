#!/usr/bin/env ruby
#  SubtitleIt
#
#  Created on 2008-09-04.
#  Copyleft (c) 2008. MIT License.
#
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

#require 'colorize'
require 'optparse'
require 'subtitle_it'

include SubtitleIt

OPTIONS = {
  :force    => false,
  :format   => nil,
  :delay    => nil
}
MANDATORY_OPTIONS = %w(  )

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
SubtitleIt - Download, convert and create subtitles.

Usage: #{File.basename($0)} [options] movie or file_in [file_out]

BANNER

  opts.separator " Options are:"

  opts.on("-l", "--language=LANGUAGE", String,
          "Language to search subtitles for, try it empty to see the supported ones.") do |ol|
    if ol.nil?
      puts Subdown.subtitle_languages
      exit
    end
    OPTIONS[:lang] = ol
  end

  opts.on("-c", "--convert=FORMAT", String,
          "Format to convert to") { |o| OPTIONS[:format] = o }

  opts.on("-d", "--delay=DELAY", Float,
          "Delay to add/remove") { |o| OPTIONS[:delay] = o }

  opts.on("-1", "--first") { OPTIONS[:first] = true }

  opts.on("-f", "--force", "Force overwrite") { OPTIONS[:force] = true }

  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }

  opts.on("-v", "--version",
          "Show program version") { puts "SubtitleIt v#{SubtitleIt::VERSION}"; exit }

  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
end

if ARGV.empty?
  puts parser
  exit
else
  SubtitleIt::Bin.run! ARGV, OPTIONS[:lang], OPTIONS[:format], OPTIONS[:force], OPTIONS[:delay], OPTIONS[:first]
end
